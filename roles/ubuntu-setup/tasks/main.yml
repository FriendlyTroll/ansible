---
- name: Add skype apt key
  apt_key:
      url: https://repo.skype.com/data/SKYPE-GPG-KEY
      state: present
  become: true
  become_user: root

- name: Install skype repo
  apt_repository:
      repo: deb [arch=amd64] https://repo.skype.com/deb stable main
      state: present
  become: true
  become_user: root

- name: Add slack apt key
  apt_key:
      url: https://packagecloud.io/slacktechnologies/slack/gpgkey
      state: present
  become: true
  become_user: root

- name: Install slack repo
  apt_repository:
      repo: deb https://packagecloud.io/slacktechnologies/slack/debian/ jessie main
      state: present
  become: true
  become_user: root

# https://protonvpn.com/support/linux-ubuntu-vpn-setup/
- name: Install protonvpn repo
  apt:
      deb: https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3_all.deb
  tags: packages
  become: true
  become_user: root

- name: Install ubuntu packages
  apt:
      name:
          - ubuntu-restricted-extras
          - imagemagick
          - curl
          - git
          - sshfs
          - vim
          - zenity
          - mpv
          - syncthing
          - syncthing-gtk
          - chrome-gnome-shell
          - keepassxc
          - vim-gtk3
          - fzf
          - universal-ctags
          - mlocate
          - filezilla
          - bsdutils
          - python3-pip
          - asciinema
          - slack-desktop
          - skypeforlinux
          - xclip
          - protonvpn
          - whois
          - smplayer
          - yamllint
          - flameshot
      update_cache: yes
  become: true
  become_user: root
  tags: packages

- name: Install python specific packages
  apt:
      name:
          - flake8
      update_cache: true
  become_user: root
  tags: python-packages

- name: Install desktop specific ubuntu packages
  apt:
      name:
          - steam-devices
          - steam-installer
      update_cache: yes
  become: true
  become_user: root
  tags: packages
  when: '"XPS" not in ansible_hostname'

- name: Install laptop specific ubuntu packages
  apt:
      name:
          - powertop
      update_cache: yes
  become: true
  become_user: root
  tags: packages
  when: '"XPS" in ansible_hostname'

- name: Install zoom
  apt:
      deb: https://zoom.us/client/latest/zoom_amd64.deb
  tags: packages
  become: true
  become_user: root

- name: Update snap packager
  command: snap refresh
  become: true
  become_user: root

# need to install snaps one by one because of this bug
# https://forum.snapcraft.io/t/trying-to-re-install-multiple-packages-with-snap-install-fails-with-install-refresh-information-results-from-the-store/24859
- name: Install ubuntu snap packages - acestreamplayer
  command: snap install acestreamplayer
  become: true
  become_user: root

- name: Create custom directories
  file:
      path: "{{ item }}"
      state: directory
      mode: 0755
  loop:
      - $HOME/Pictures/screenshots
      - $HOME/Documents/terminal_logs
      - $HOME/.config/mpv
      - $HOME/.config/asciinema
      - $HOME/.local/share/nautilus/scripts
      - $HOME/Applications  # for AppImages
      - $HOME/.local/share/fonts

- name: Install AppImages appimage daemon for integration
  shell:
      cmd: wget -c https://github.com/$(wget -q https://github.com/probonopd/go-appimage/releases/expanded_assets/continuous -O - | grep "appimaged-.*-x86_64.AppImage" | head -n 1 | cut -d '"' -f 2) -P ~/Applications/ && chmod --recursive +x ~/Applications/
      warn: false
  tags: appimage

- name: Copy bashrc
  template:
      src: bashrc.j2
      dest: $HOME/.bashrc
  tags: config

- name: Copy HOME .config files
  copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
  loop:
      - { src: "asciinema_config", dest: "$HOME/.config/asciinema/config" }
      - { src: "vimrc", dest: "$HOME/.vimrc" }
      - { src: "mpv.conf", dest: "$HOME/.config/mpv" }
      - { src: "slack.desktop", dest: "$HOME/.local/share/applications/" }
  tags: config

- name: Copy asciinema player config files
  copy:
      src:  "{{ item }}"
      dest: "$HOME/Documents/terminal_logs"
  loop:
      - "asciinema-player.css"
      - "asciinema-player.min.js"
      - "asciinema_player.html"
  tags: config

- name: Open pgp files with seahorse
  command: xdg-mime default org.gnome.seahorse.Application.desktop application/pgp-keys

- name: Create cronjob to zip up logs from terminal recording program
  cron:
      name: "zip terminal logs"
      job: "find $HOME/Documents/terminal_logs -mtime +7 ! -name 'asciinema*' -exec bzip2 {} \\;"
      hour: "13"
      minute: "0"
  tags: cron

- name: Create cronjob to download wiki from my site
  cron:
      name: "download wiki from my site"
      job: "wget --header='X-DW-Token: {{ vault_dw_token }}' https://dw.exitstatus0.com/backup/dokuwiki.tar.bz2 --output-document=/home/antisa/dokuwiki.tar.bz2"
      hour: "17"
      minute: "30"
  tags: cron

- name: Copy opensubtitlesdownload script
  template:
      src: opensubtitles.j2
      dest: $HOME/.local/share/nautilus/scripts/opensubtitles.py
  tags: scripts

- name: Copy other useful nautilus scripts
  copy:
      src: "{{ item }}"
      dest: "$HOME/.local/share/nautilus/scripts"
      mode: 0755
  loop:
      - "nautilus-renamer.py"
      - "nautilus-resize-image"
      - "asciivideo.sh"
  tags: scripts

- name: Mount backup disk at startup
  mount:
      path: /mnt/backup
      state: present
      src: UUID=f1a236ec-0809-4c61-b9c4-bee4427e728f
      fstype: ext4
      opts: defaults,noatime
  become: true
  become_user: root
  tags: mounts

- name: Mount touro disk at startup
  mount:
      path: /mnt/touro
      state: present
      src: root@192.168.99.143:/media/touro
      fstype: fuse.sshfs
      opts: noauto,user,x-systemd.automount,defaults,_netdev,allow_other,identityfile=/root/.ssh/id_ed25519
  become: true
  become_user: root
  tags: mounts

- name: Mount Western digital disk at startup
  mount:
      path: /mnt/wd4tb
      state: present
      src: UUID=033b3425-8b5c-4a58-b69a-108cfed2614b
      fstype: ext4
      opts: defaults,noatime
  become: true
  become_user: root
  tags: mounts

- name: Add raspberrypis host key to the root user
  known_hosts:
      path: /root/.ssh/known_hosts
      name: raspberrypi_3b+
      key: raspberrypi_3b+ ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJH7iLv2mwvJ7ERSnrjdADbBzLF2Xo9dxANk9Vt+nY5bNTjrXNsm96Dc9U8g087TSkfYv8sLBQ9p7XKJieA0foo= root@raspberrypi
      state: present
  become: true
  become_user: root

- name: Generate ssh key for root user
  command:
    cmd: ssh-keygen -t ed25519  -q -f "/root/.ssh/id_ed25519" -N ""
    creates: "/root/.ssh/id_ed25519"
  become: true
  become_user: root

- name: Copy custom Gnome keyboard shortcuts file
  template:
    src: custom-shortcuts.conf.j2
    dest: /tmp/custom-shortcuts.conf
  tags: config

- name: Import custom Gnome keyboard shortcuts
  shell: dconf load / < /tmp/custom-shortcuts.conf
  tags: config

- name: Include gaming.yml tasks
  include_tasks: gaming.yml
  when: gaming == True

- name: Download Anki flashcards
  get_url:
      url: https://github.com/ankitects/anki/releases/download/{{ anki_version }}/anki-{{ anki_version }}-linux-qt6.tar.zst
      dest: /tmp/
      mode: 0755
  tags: anki

- name: Unarchive Anki flashcards
  unarchive:
    src: /tmp/anki-{{ anki_version }}-linux-qt6.tar.zst
    dest: /tmp/
    extra_opts:
      - --use-compress-program=unzstd
  tags: anki

- name: Install Anki flashcards
  command:
    chdir: /tmp/anki-{{ anki_version }}-linux-qt6
    cmd: sudo bash install.sh
  become_user: root
  tags: anki

- name: Install nodesource repo (for coc.vim plugin)
  shell: curl -sL install-node.vercel.app/lts | bash
  become_user: root

- name: Install NerdFonts
  shell: curl -fLo "Droid Sans Mono for Powerline Nerd Font Complete.otf" https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf
  chdir: $HOME/.local/share/fonts

