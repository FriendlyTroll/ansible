- name: Run specific installation on Ubuntu
  include_tasks: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- name: Run specific installation on Debian
  include_tasks: debian.yml
  when: ansible_distribution == "Debian"

- name: Docker install
  import_role: 
    name: docker

- name: Install Terraform binary
  get_url:
    url: 'https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip'
    dest: /tmp/
    mode: '0755'
  tags: terraform

- name: Unarchive terraform
  unarchive:
    src: /tmp/terraform_{{ terraform_version }}_linux_amd64.zip
    dest: $HOME/.local/bin/
  tags: terraform

- name: Install terraform autocomplete
  shell: terraform -install-autocomplete
  tags: terraform

- name: Install additional ansible plugins
  community.general.ansible_galaxy_install:
    type: collection
    name: "{{ item }}"
  loop:
    - community.docker
    - community.mysql

- block:
  - name: Install ansible repo
    apt_repository:
        repo: ppa:ansible/ansible
        state: present
    tags: ansible
  
  - name: Install ansible
    apt:
      name:
        - ansible
    tags: ansible

  - name: Install kubectl snap
    command: snap install kubectl --classic

  - name: Install helm snap
    command: snap install helm --classic
    tags: helm

  - name: Install eksctl
    shell: |
      # for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
      ARCH=amd64
      PLATFORM=$(uname -s)_$ARCH

      curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

      # (Optional) Verify checksum
      curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

      tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

      sudo mv /tmp/eksctl /usr/local/bin
    tags: aws, eks

  - name: Install github cli
    shell: |
      (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
      && sudo mkdir -p -m 755 /etc/apt/keyrings \
      && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
      && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
      && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
      && sudo apt update \
      && sudo apt install gh -y
    tags: gh, github

  - name: Install aws-cli
    shell: |
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
    tags: aws, aws-cli

  - name: Install minikube
    shell: |
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
    tags: minikube, k8s

  become: true
  become_user: root

- name: Install aws config files
  copy:
    src: "aws/{{ item }}.enc.j2"
    dest: "$HOME/.aws/{{ item }}"
  loop:
    - config
    - credentials
  tags: aws, config, aws-config

- name: Generate minikube bash-completion
  shell: minikube completion bash > ~/.minikube/completion.bash.inc
  tags: minikube

- name: Generate kubectl bash-completion
  shell: kubectl completion bash > ~/.kube/completion.bash.inc
  tags: kubectl

- name: Generate helm bash-completion
  shell: helm completion bash > ~/.kube/helm_completion.bash.inc
  tags: helm

- name: Install aws-vault
  get_url:
    url: https://github.com/99designs/aws-vault/releases/download/v{{ aws_vault_version }}/aws-vault-linux-amd64
    dest: /usr/local/bin/aws-vault
    mode: '0755'
  tags: aws

# https://cloud.google.com/sdk/docs/install
- name: Install Google cloud tool - gcloud
  shell: |
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    sudo apt-get update && sudo apt-get -y install google-cloud-cli
  tags: google, gcloud

- name: Print info about gcloud
  debug:
    msg: "Remember to run gcloud init after gcloud installation"
  tags: google, gcloud

- name: Install pulumi
  shell: |
    curl -fsSL https://get.pulumi.com | sh
  tags: pulumi
