---
- name: Vagrant setup
  hosts: all
  become: true

  #    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Add my ssh keys
      authorized_key:
          user: root
          state: present
          key: "{{ item }}"
      loop:
        - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
        - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"
      tags: ssh

    - name: Check on which Debian we are
      command: lsb_release -cs
      register: debian_version
    
    - name: Running on ... 
      debug:
        msg: "{{ debian_version.stdout }}"
    
    - name: Install some useful pkgs
      apt:
          name:
              - gpg
              - git
              - software-properties-common
              - unzip
              - rsync
              - shorewall
              - vim
          state: latest
          update_cache: yes

    - name: Debian 8 tasks
      include: debian8.yml
      when: ansible_distribution == 'Debian' and (ansible_distribution_major_version == '8' or ansible_distribution_major_version == '9')
    
    - name: Debian 10 tasks
      include: debian10.yml
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '10'

    - name: Debian 11 tasks
      include: debian11.yml
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '11'
      
    - name: Add APT gpg key for Docker repo
      apt_key:
          url: https://download.docker.com/linux/debian/gpg
          state: present
      tags: docker
      
      
    - name: Add docker repo
      apt_repository:
          repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ debian_version.stdout }} stable"
          state: present
      tags: docker
      
    - name: Install docker
      apt:
          name:
              - docker-ce
              - docker-ce-cli 
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
          state: latest
          update_cache: yes
      tags: docker

    - name: Create docker networks
      docker_network:
          name: "{{ item }}"
      loop:
          - frontend-services-dev
          - backend-services-dev
          - backend-services-live
      tags: docker

    - name: Set timezone
      timezone:
          name: Europe/Berlin

    - name: Create directories
      file: 
        dest: "{{ item }}"
        state: directory
      loop: 
        - /etc/shorewall/rules.d

    - name: Customize bash prompt
      lineinfile: 
        path: /root/.bashrc 
        regexp: ^PS1= 
        line: 'PS1="\[\033[38;5;177m\]\u\[$(tput sgr0)\]@\[$(tput sgr0)\]\[\033[38;5;177m\]\h\[$(tput sgr0)\]:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]\[$(tput sgr0)\]: \[$(tput sgr0)\]"'


    
