---
- name: Vagrant setup
  hosts: all
  become: true
  vars:
    docker_compose_version: "v2.25.0"

  #    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Add my ssh keys
      authorized_key:
          user: root
          state: present
          key: "{{ item }}"
      loop:
        - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
        - "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"
      tags: ssh

    - name: Check on which Debian we are
      command: lsb_release -cs
      register: debian_version
    
    - name: Running on ... 
      debug:
        msg: "{{ debian_version.stdout }}"
    
    - name: Install some useful pkgs
      apt:
          name:
              - gpg
              - git
              - software-properties-common
              - unzip
              - rsync
              - shorewall
              - vim
              - curl
          state: latest
          update_cache: yes

    - name: Debian 8 tasks
      include_tasks: debian8.yml
      when: ansible_distribution == 'Debian' and (ansible_distribution_major_version == '8' or ansible_distribution_major_version == '9')
    
    - name: Debian 10 tasks
      include_tasks: debian10.yml
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '10'

    - name: Debian 11 tasks
      include_tasks: debian11.yml
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '11'
      
    - name: Debian 12 tasks
      # reusing the same tasks as Debian 11
      include_tasks: debian12.yml
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '12'

    - name: Add APT gpg key for Docker repo
      apt_key:
          url: https://download.docker.com/linux/debian/gpg
          state: present
      tags: docker
      
      
    - name: Add docker repo
      apt_repository:
          repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ debian_version.stdout }} stable"
          state: present
      tags: docker
      
    - name: Install docker
      apt:
          name:
              - docker-ce
              - docker-ce-cli 
              - containerd.io
              - docker-buildx-plugin
          state: latest
          update_cache: yes
      tags: docker

    - name: Install docker-compose
      shell: 'curl -L "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose'

    - name: Make docker-compose executable
      file:
        path: "/usr/bin/docker-compose"
        mode: a+x
        state: file
      tags: deploy_artifact

    - name: Create docker networks
      docker_network:
          name: "{{ item }}"
      loop:
          - frontend-services-dev
          - frontend-services-pre
          - frontend-services-live
          - backend-services-dev
          - backend-services-dev-it
          - backend-services-dev-de
          - backend-services-pre-it
          - backend-services-pre-de
          - backend-services-live
      tags: docker

    - name: Set timezone
      timezone:
          name: Europe/Berlin

    - name: Create directories
      file: 
        dest: "{{ item }}"
        state: directory
      loop: 
        - /etc/shorewall/rules.d
        - /root/bin

    - name: Customize bash prompt
      lineinfile: 
        path: /root/.bashrc 
        regexp: ^PS1= 
        line: 'PS1="\[\033[38;5;177m\]\u\[$(tput sgr0)\]@\[$(tput sgr0)\]\[\033[38;5;177m\]\h\[$(tput sgr0)\]:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]\[$(tput sgr0)\]: \[$(tput sgr0)\]"'

    - name: Copy LE certs
      copy:
        dest: /etc/letsencrypt/
        src: /vagrant/letsencrypt_certs_de_dev/
        remote_src: yes

    
